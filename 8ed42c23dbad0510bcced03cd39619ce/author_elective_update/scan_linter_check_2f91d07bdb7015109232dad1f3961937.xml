<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="DELETE">
        <active>true</active>
        <category>code_sanity</category>
        <description>The use of arrow functions is controversal. On the one hand it provides a syntax short hand for callback functions. However it renders code to be less readable and less testable. The use of arrow functions does not provide any advantages over any alternatives and hence should be avoided.</description>
        <documentation_url/>
        <finding_type>scan_finding</finding_type>
        <name>CodeSanity - Avoid arrow functions</name>
        <priority>1</priority>
        <resolution_details>Replace arrow functions by functions which are defined explicitly with a name, a function body and sufficient documentation.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {
	
	if (x_snc_codesanity.IsCheckApplicableToRecord())
	{		
		var GetStringValue = x_snc_devtools.GetStringValue;

		var strSource = GetStringValue(engine.rootNode.toSource());

		if (strSource.indexOf('=>') != -1)
		{
			engine.finding.incrementWithNode(engine.rootNode);
		}
	}

})(engine);]]></script>
        <short_description>Do not use arrow functions</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-26 15:38:14</sys_created_on>
        <sys_id>2f91d07bdb7015109232dad1f3961937</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>CodeSanity - Avoid arrow functions</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_linter_check_2f91d07bdb7015109232dad1f3961937</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-10-28 23:41:43</sys_updated_on>
    </scan_linter_check>
<sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</application>
        <file_path/>
        <instance_id>01bfa2ffdb5ecd104d2bac44d496195a</instance_id>
        <instance_name>wildgrubetestsandiego</instance_name>
        <name>scan_linter_check_2f91d07bdb7015109232dad1f3961937</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="scan_linter_check"&gt;
    &lt;scan_linter_check action="INSERT_OR_UPDATE"&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;category&gt;code_sanity&lt;/category&gt;
        &lt;description&gt;The use of arrow functions is controversal. On the one hand it provides a syntax short hand for callback functions. However it renders code to be less readable and less testable. The use of arrow functions does not provide any advantages over any alternatives and hence should be avoided.&lt;/description&gt;
        &lt;documentation_url/&gt;
        &lt;finding_type&gt;scan_finding&lt;/finding_type&gt;
        &lt;name&gt;CodeSanity - Avoid arrow functions&lt;/name&gt;
        &lt;priority&gt;1&lt;/priority&gt;
        &lt;resolution_details&gt;Replace arrow functions by functions which are defined explicitly with a name, a function body and sufficient documentation.&lt;/resolution_details&gt;
        &lt;run_condition/&gt;
        &lt;score_max&gt;100&lt;/score_max&gt;
        &lt;score_min&gt;0&lt;/score_min&gt;
        &lt;score_scale&gt;1&lt;/score_scale&gt;
        &lt;script&gt;&lt;![CDATA[(function (engine) {
	
	if (x_snc_codesanity.IsCheckApplicableToRecord())
	{		
		var GetStringValue = x_snc_devtools.GetStringValue;

		var strSource = GetStringValue(engine.rootNode.toSource());

		if (strSource.indexOf('=&gt;') != -1)
		{
			engine.finding.incrementWithNode(engine.rootNode);
		}
	}

})(engine);]]&gt;&lt;/script&gt;
        &lt;short_description&gt;Do not use arrow functions&lt;/short_description&gt;
        &lt;sys_class_name&gt;scan_linter_check&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-07-26 15:38:14&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2f91d07bdb7015109232dad1f3961937&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CodeSanity - Avoid arrow functions&lt;/sys_name&gt;
        &lt;sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity"&gt;8ed42c23dbad0510bcced03cd39619ce&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="CodeSanity WORK IN PROGRESS"&gt;8ed42c23dbad0510bcced03cd39619ce&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;scan_linter_check_2f91d07bdb7015109232dad1f3961937&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-28 23:41:43&lt;/sys_updated_on&gt;
    &lt;/scan_linter_check&gt;
&lt;/record_update&gt;</payload>
        <payload_hash>827967251</payload_hash>
        <record_name>CodeSanity - Avoid arrow functions</record_name>
        <reverted_from/>
        <source>a188ec5edb7ad5106a03dad1f396191d</source>
        <source_table>sys_upgrade_history</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-29 11:30:34</sys_created_on>
        <sys_id>7598e09edb7ad5106a03dad1f39619e2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>184238204030000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-10-29 11:30:34</sys_updated_on>
        <type>Linter Check</type>
        <update_guid>b198e09e787ad51070be3359e0f634e2</update_guid>
        <update_guid_history>b198e09e787ad51070be3359e0f634e2:0,d6c49a07e11d9950ca81cce1f9e9ede9:0,672025089f4d5510de6896255acd0684:-563965657</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="CodeSanity - Avoid arrow functions">89ed38efdb3e91106a03dad1f3961951</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-02 10:16:02</sys_created_on>
        <sys_db_object display_value="" name="scan_linter_check">scan_linter_check</sys_db_object>
        <sys_id>6e8404454bbf42ecaa9b35aaa4951ff1</sys_id>
        <sys_metadata>2f91d07bdb7015109232dad1f3961937</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CodeSanity - Avoid arrow functions</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_scope_delete display_value="">8c01c38fa81d4fae9bac60e1bb586744</sys_scope_delete>
        <sys_update_name>scan_linter_check_2f91d07bdb7015109232dad1f3961937</sys_update_name>
        <sys_update_version display_value="scan_linter_check_2f91d07bdb7015109232dad1f3961937">7598e09edb7ad5106a03dad1f39619e2</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-11-02 10:16:02</sys_updated_on>
    </sys_metadata_delete>
</record_update>
