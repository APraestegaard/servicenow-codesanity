<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="DELETE">
        <active>true</active>
        <category>code_sanity</category>
        <description>If two constant string literals are concatenated this is eventually to outmaneuver source code sanity checks - e.g. against the use of Sys IDs in source code.  </description>
        <documentation_url/>
        <finding_type/>
        <name>CodeSanity - String concatenation anti-pattern</name>
        <priority>1</priority>
        <resolution_details>Fix the actual issue and do not concatenate two constant string literals.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {
	
    if (x_snc_codesanity.IsCheckApplicableToRecord())
	{	

		var GetStringValue = x_snc_devtools.GetStringValue;

		var strSource = GetStringValue(engine.rootNode.toSource());

		if (/([^n\>][\"\']\s*\+\s*[\"\'][^\\\<])/.test(strSource))
		{
			engine.finding.incrementWithNode(engine.rootNode);
		}
	}

})(engine);]]></script>
        <short_description>Do not concatenate constant string literals</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-04-18 18:07:41</sys_created_on>
        <sys_id>cf7e3affdbfe4550bcced03cd3961935</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>CodeSanity - String concatenation anti-pattern</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_linter_check_cf7e3affdbfe4550bcced03cd3961935</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-02 12:28:00</sys_updated_on>
    </scan_linter_check>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</application>
        <file_path/>
        <instance_id>a42b4994dbb6bc1052dd2f17d4961966</instance_id>
        <instance_name>wildgrubetestrome</instance_name>
        <name>scan_linter_check_cf7e3affdbfe4550bcced03cd3961935</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="scan_linter_check"&gt;&lt;scan_linter_check action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;category&gt;code_sanity&lt;/category&gt;&lt;description&gt;If two constant string literals are concatenated this is eventually to outmaneuver source code sanity checks - e.g. against the use of Sys IDs in source code.  &lt;/description&gt;&lt;documentation_url/&gt;&lt;finding_type/&gt;&lt;name&gt;CodeSanity - String concatenation anti-pattern&lt;/name&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;resolution_details&gt;Fix the actual issue and do not concatenate two constant string literals.&lt;/resolution_details&gt;&lt;run_condition/&gt;&lt;score_max&gt;100&lt;/score_max&gt;&lt;score_min&gt;0&lt;/score_min&gt;&lt;score_scale&gt;1&lt;/score_scale&gt;&lt;script&gt;&lt;![CDATA[(function (engine) {
	
    if (x_snc_codesanity.IsCheckApplicableToRecord())
	{	

		var GetStringValue = x_snc_devtools.GetStringValue;

		var strSource = GetStringValue(engine.rootNode.toSource());

		if (/([^n\&gt;][\"\']\s*\+\s*[\"\'][^\\\&lt;])/.test(strSource))
		{
			engine.finding.incrementWithNode(engine.rootNode);
		}
	}

})(engine);]]&gt;&lt;/script&gt;&lt;short_description&gt;Do not concatenate constant string literals&lt;/short_description&gt;&lt;sys_class_name&gt;scan_linter_check&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-04-18 18:07:41&lt;/sys_created_on&gt;&lt;sys_id&gt;cf7e3affdbfe4550bcced03cd3961935&lt;/sys_id&gt;&lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;&lt;sys_name&gt;CodeSanity - String concatenation anti-pattern&lt;/sys_name&gt;&lt;sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity"&gt;8ed42c23dbad0510bcced03cd39619ce&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CodeSanity WORK IN PROGRESS"&gt;8ed42c23dbad0510bcced03cd39619ce&lt;/sys_scope&gt;&lt;sys_update_name&gt;scan_linter_check_cf7e3affdbfe4550bcced03cd3961935&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-08-02 12:28:00&lt;/sys_updated_on&gt;&lt;/scan_linter_check&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-227903751</payload_hash>
        <record_name>CodeSanity - String concatenation anti-pattern</record_name>
        <reverted_from/>
        <source>3b921c09db9285103a25edb305961900</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-02 12:28:00</sys_created_on>
        <sys_id>1dd92f7ddb0999109232dad1f39619f0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1825e86fae60000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-02 12:28:00</sys_updated_on>
        <type>Linter Check</type>
        <update_guid>15d92f7d62099910b84bd0e35dcc4ff0</update_guid>
        <update_guid_history>15d92f7d62099910b84bd0e35dcc4ff0:-227903751,6b42175bd478d11080ccf4fb5fdc1c99:-506642250,89cf671e4f0cd510af96369a59e1b2c2:202259035,ca7f631eee0cd510fded46f37a848120:92938035,9bcfcde1978095109348f0386ead4db8:0,15ba07f46e4cd110f7cedd574f09ea8a:0,c06903b40a4cd1109be5cae3eb26f045:0,d868c07dae3f0510b4635da1c204fb53:0,ae4684f9ed3f0510c3dc1debfa557795:0,454d24d432834910a29856d9082fe538:0,1e177304cc8fc510bbbec2d2b5fc5bd9:1957554712</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="CodeSanity - String concatenation anti-pattern">a88eac95db759d109232dad1f39619a4</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-06 16:19:42</sys_created_on>
        <sys_db_object display_value="" name="scan_linter_check">scan_linter_check</sys_db_object>
        <sys_id>2afcf8316f5046809dc346b7ccc19900</sys_id>
        <sys_metadata>cf7e3affdbfe4550bcced03cd3961935</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CodeSanity - String concatenation anti-pattern</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_scope_delete display_value="">8c01c38fa81d4fae9bac60e1bb586744</sys_scope_delete>
        <sys_update_name>scan_linter_check_cf7e3affdbfe4550bcced03cd3961935</sys_update_name>
        <sys_update_version display_value="scan_linter_check_cf7e3affdbfe4550bcced03cd3961935">1dd92f7ddb0999109232dad1f39619f0</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-06 16:19:42</sys_updated_on>
    </sys_metadata_delete>
</record_update>
