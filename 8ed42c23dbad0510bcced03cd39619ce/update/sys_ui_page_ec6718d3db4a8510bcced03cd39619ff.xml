<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>false</direct>
        <endpoint>x_snc_codesanity_manual.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<div style="padding-left: 20px;">
<span style="visibility: hidden;">_CUT_HERE_</span>
	<g2:no_escape>$[
		var docapi = new x_snc_devtools.DocumentationAPI('8ed42c23dbad0510bcced03cd39619ce');
		docapi.RenderHeader();
	]</g2:no_escape>
	
	<p>Welcome to CodeSanity - created and maintained by&#160;<a href="mailto:sascha.wildgrube@servicenow.com">Sascha Wildgrube</a>.</p>

	<h2>Features</h2> 
	<p>Contains a number of instance scan checks to validate source code.</p>

	<h2>Disclaimer</h2>
	<g2:no_escape>$[docapi.RenderDisclaimer()]</g2:no_escape>	
	
	<h2>System Requirements</h2>
	<ul>
		<g2:no_escape>$[
			docapi.RenderSystemRequirements(
				'Rome,San Diego',
				true,
				AppGetDependencies());
		]</g2:no_escape>	
	</ul>
	
	<h2>Installation</h2>
	<ol>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DevTools',
				'https://github.com/saschawildgrube/servicenow-devtools');
		]</g2:no_escape>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'CodeSanity',
				'https://github.com/saschawildgrube/servicenow-codesanity');
		]</g2:no_escape>		
		<!--
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsAppInstall();
		]</g2:no_escape>		
		<li>TODO: Add further steps required for installation...</li>
-->
 </ol>
	
	<h2>Testing the CodeSanity scan suite</h2>
	<p>Running the scan suite against the CodeSanity app itself will cause 10 findings in 2 script includes to verify the scan checks work properly. This is not ideal - to find a better way using ATF tests is on the backlog.</p>
	
	<h2>Extending the CodeSanity scan suite</h2>
	<ol>
		<li>Change the scope to the app which should contain your new check - this should NOT be the CodeSanity app.</li>
		<li>Select "Add new check" in the menu.</li>
		<li>Create and save the new check - it will automatically be added to the CodeSanity scan suite.</li>
	</ol>

	<h2>Instance Scan checks contained in the CodeSanity app</h2>
	<g2:no_escape>$[docapi.RenderInstanceScanChecks()]</g2:no_escape>

	<!--
	<g2:no_escape>$[HtmlRenderOtherInstanceScanChecks()]</g2:no_escape>
-->	

	<g2:no_escape>$[x_snc_devtools.HtmlRenderLinkDirectory(GetLinkDirectoryInstanceScan())]</g2:no_escape>

	
	<!--
	<h2>Reference</h2>
-->
<!--
	<h3>Configuration Options</h3>
	<g2:no_escape>$[docapi.RenderProperties()]</g2:no_escape>
-->
	<!--
	<h3>UI Actions</h3>
	<g2:no_escape>$[docapi.RenderUIActions()]</g2:no_escape>		
	
	<h3>Script Includes</h3>
	<g2:no_escape>$[docapi.RenderScriptIncludes()]</g2:no_escape>
-->
	<!--
	<h3>UI Scripts</h3>
	<g2:no_escape>$[docapi.RenderUIScripts()]</g2:no_escape>	
	
	<h3>Test step configurations</h3>
	<g2:no_escape>$[docapi.RenderTestStepConfigurations()]</g2:no_escape>
	
	<h3>Extension Points</h3>
	<g2:no_escape>$[docapi.RenderExtensionPoints()]</g2:no_escape>		

	<h3>Business Rules</h3>
	<g2:no_escape>$[docapi.RenderBusinessRules()]</g2:no_escape>	
-->	

	<h2>License</h2>
	<g2:no_escape>$[docapi.RenderCopyright(2022,'Sascha Wildgrube')]</g2:no_escape>
	<g2:no_escape>$[docapi.RenderLicense()]</g2:no_escape>
	
	<h2>Release Notes</h2>

	<!--
	<h3>1._.0 - 2022-TODO</h3>
	<ol>
		<li>TODO: document changes here</li>
	</ol>
-->
	
	<h3>1.7.0 - 2022-TODO</h3>
	<ol>
		<li>TODO: document changes here</li>
	</ol>
	
	<h3>1.6.0 - 2022-07-27 - Birthday Edition</h3>
	<ol>
		<li>Added check "CodeSanity - Script include has a valid name".</li>
		<li>Added check "CodeSanity - InstallerAPI without context".</li>
		<li>Added check "CodeSanity - Avoid arrow functions". Although arrow functions are not yet supported in ServiceNow.</li>
		<li>Added check "CodeSanity - Widget checks for input".</li>
		<li>The check "Checks for the bracket-dot anti-pattern" now allows the pattern "gs.getUser()." because we can assume that gs.getUser() always returns GlideUser object.</li>
		<li>The check "Checks for the bracket-dot anti-pattern" now allows patterns like "$('needle')." to support jquery in sp_widget client code.</li>
		<li>Renamed check "CodeSanity - [0] anti-pattern" to "CodeSanity - Constant array index anti-pattern".</li>
		<li>Added the function HtmlrenderCodingGuideline() to produce ui pages that can serve as a coding guideline document.</li>
		<li>This manual page no longer shows instance scan checks that are contained in other apps.</li>
	</ol>	
	
	<h3>1.5.0 - 2022-07-08</h3>
	<ol>
		<li>DevTools 1.40.0 is now required.</li>
		<li>Check "CodeSanity - Bracket-dot anti-pattern" is now making an exception for sp_widget records to allow the pattern: "server.update().then(".</li>
		<li>Check "CodeSanity - Sys IDs in scripts" has been updated to check only against letters from 'a' to 'f'.</li>
		<li>Check "CodeSanity - String concatenation anti-pattern" now allows concatenated strings if the second string starts with a backslash and hence indicates an escaped character.</li>
	</ol>
	
	<h3>1.4.0 - 2022-06-12</h3>
	<ol>
		<li>DevTools 1.39.0 is now required.</li>
		<li>Added check "CodeSanity - logging.verbosity system property".</li>
		<li>The check "CodeSanity - Script include must contain a class or function" was improved to avoid false negatives.</li>
		<li>The check "CodeSanity - Throwing exceptions" was improved to avoid false positives.</li>
		<li>Added the "logging.verbosity" system property.</li>
		<li>Added first ATF tests to verify the checks and removed the "AntiPattern" script includes.</li>
	</ol>	
	
	<h3>1.3.0 - 2022-06-10</h3>
	<ol>
		<li>Added the check "CodeSanity - UI Actions without comments".</li>
		<li>The check "CodeSanity - Application names in code" now considers the AppInstall() function as an exception.</li>
		<li>The check "CodeSanity - Script include must contain a class or function" is now considering comments at the top of the script.</li>
	</ol>	
	
	<h3>1.2.0 - 2022-05-31</h3>
	<ol>
		<li>DevTools 1.38.0 is now required.</li>
		<li>Added check "CodeSanity - Script include must contain a class or function".</li>
		<li>Added check "CodeSanity - Table check code pattern".</li>
		<li>The check against application names in code now considers application name postfixes (like "WORK IN PROGRESS" etc.).</li>
		<li>The check against application names in code now considers specific code patterns as exceptions where it is unlikely that the string is actually the application name - i.e. where the string is more likely a class name or the name of an extension point.</li>
		<li>The check against application names in code now considers the function x_snc_codesanity.GetScanSuiteRecord() and any script include containing "GetLinkDirectory" in the name as an exception.</li>
		<li>The check against the [0] anti pattern is now considering any constant number pre or postfixed by whitespace characters.</li>
		<li>More exceptions have been added for the check against Sys IDs in scripts.</li>
	</ol>
	
	<h3>1.1.0 - 2022-04-19</h3>
	<ol>
		<li>DevTools 1.37.0 is now required.</li>
		<li>Priority of all checks is now set to "Critical".</li>
		<li>Refactored CodeSanity's own code not to trigger any findings other than in the honey pot script include "AntiPatterns".</li>
		<li>Added a check against the use of application names in source code.</li>
		<li>Added a check if the field "short_description" is used in a condition statement.</li>
		<li>Added a check against using the Date class constructor without parameters.</li>
		<li>Added a check against the bracket-dot anti-pattern.</li>
		<li>Added a check against the string concatenation anti-pattern.</li>
		<li>Several exceptions have been added for the check against Sys IDs in scripts as some specific functions will need to contain Sys IDs no matter what.</li>
		<li>Corrected a defect in the check against Sys IDs in source code.</li>
	</ol>

	<h3>1.0.0 - 2022-03-15</h3>
	<p>First baselined version</p>

<span style="visibility: hidden;">_CUT_HERE_</span>
</div>
</j:jelly>]]></html>
        <name>manual</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-10 09:51:04</sys_created_on>
        <sys_id>ec6718d3db4a8510bcced03cd39619ff</sys_id>
        <sys_mod_count>77</sys_mod_count>
        <sys_name>manual</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>sys_ui_page_ec6718d3db4a8510bcced03cd39619ff</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-27 16:06:49</sys_updated_on>
    </sys_ui_page>
</record_update>
